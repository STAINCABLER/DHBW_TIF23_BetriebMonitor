name: Build and Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE
      - "**/*.md"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: dhbw_tif23_betriebmonitor

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Web2.0/Dockerfile

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r Web2.0/requirements.txt

      - name: Static analysis
        run: python -m compileall Web2.0/server.py

      - name: Prepare image tags
        id: prep
        run: |
          owner="${{ github.repository_owner }}"
          owner_lower=$(printf '%s' "$owner" | tr '[:upper:]' '[:lower:]')
          echo "owner=$owner_lower" >> "$GITHUB_OUTPUT"
          echo "latest=$owner_lower/${IMAGE_NAME}:latest" >> "$GITHUB_OUTPUT"
          echo "sha=$owner_lower/${IMAGE_NAME}:${{ github.sha }}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Web2.0/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.prep.outputs.latest }}
            ghcr.io/${{ steps.prep.outputs.sha }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Generate compose bundle
        run: docker compose -f docker-compose.yml config
